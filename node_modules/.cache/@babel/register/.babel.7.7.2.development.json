{
  "{\"sourceRoot\":\"/Users/voidbrain/ionic/APPS/Grover\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/voidbrain/ionic/APPS/Grover\",\"filename\":\"/Users/voidbrain/ionic/APPS/Grover/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/voidbrain/ionic/APPS/Grover\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/voidbrain/ionic/APPS/Grover",
      "filename": "/Users/voidbrain/ionic/APPS/Grover/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/voidbrain/ionic/APPS/Grover",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/voidbrain/ionic/APPS/Grover/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/voidbrain/ionic/APPS/Grover/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _pot = _interopRequireDefault(require(\"./app/envoirement/pot/pot\"));\n\nvar _room = _interopRequireDefault(require(\"./app/envoirement/room/room\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Grover/RedNeck System\n * Author: Voidbrain.net\n */\nvar http = require('http');\n\nvar https = require('https');\n\nvar url = require('url');\n\nvar Main =\n/*#__PURE__*/\nfunction () {\n  function Main() {\n    _classCallCheck(this, Main);\n\n    this.webserver = http.createServer();\n    this.remoteServer = 'https://www.voidbrain.net/grover/ajax/moduli/api/device/';\n    this.mainClock = 5 * 1000; // ms\n\n    this.appSetup();\n  }\n\n  _createClass(Main, [{\n    key: \"appSetup\",\n    value: function appSetup() {\n      this.pot1 = new _pot[\"default\"]({\n        potID: 'pot1',\n        waterTemperatureProbeID: '28-0114502296aa',\n        waterLevelProbeTriggerPin: 1,\n        waterLevelProbeEchoPin: 2,\n        phProbeID: 'pot1PhProbeID',\n        ecProbeID: 'pot1ECProbeID',\n        waterLevelProbeID: 'pot1WaterLevelProbeID',\n        waterLoopID: 'pot1WaterLoopID',\n        waterRefillID: 'pot1WaterRefillID',\n        phBalancerID: 'pot1PhBalancerID',\n        ecBalancerID: 'pot1EcBalancerID'\n      });\n      this.pot2 = new _pot[\"default\"]({\n        potID: 'pot2',\n        waterTemperatureProbeID: '28-0114504ea1aa',\n        waterLevelProbeTriggerPin: 3,\n        waterLevelProbeEchoPin: 4,\n        phProbeID: 'pot2PhProbeID',\n        ecProbeID: 'pot2ECProbeID',\n        waterLevelProbeID: 'pot2WaterLevelProbeID',\n        waterLoopID: 'pot1WaterLoopID',\n        waterRefillID: 'pot2WaterRefillID',\n        phBalancerID: 'pot2PhBalancerID',\n        ecBalancerID: 'pot2EcBalancerID'\n      });\n      this.pots = [this.pot1, this.pot2];\n      this.room = new _room[\"default\"]({\n        roomID: 1,\n        waterTemperatureProbeID: null,\n        envoirementTemperatureProbeId: null,\n        lightSwitchID: null,\n        fanMotorID: null,\n        pots: this.pots\n      });\n      this.serverStart();\n      this.serverListen();\n      this.serverCallRemote('ping', 'START');\n      this.mainLoop();\n    }\n  }, {\n    key: \"mainLoop\",\n    value: function mainLoop() {\n      var self = this;\n      setInterval(function () {\n        self.room.pots.forEach(function (pot) {// pot.waterTemperature.getTemperature().then(res=>{\n          //    console.log(\"Pot id: \" + pot.id, \" Value: \" + res);\n          // })\n        });\n      }, self.mainClock);\n    }\n    /**\n    * HTTP Server\n    */\n\n  }, {\n    key: \"serverCallRemote\",\n    value: function serverCallRemote(page) {\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var self = this;\n      https.get(self.remoteServer + page + '?action=' + action, function (resp) {\n        var data = '';\n        resp.on('data', function (chunk) {\n          data += chunk;\n        });\n        resp.on('end', function () {\n          console.log(JSON.parse(data));\n        });\n      }).on(\"error\", function (err) {\n        console.log(\"Error: \" + err.message);\n      });\n    }\n  }, {\n    key: \"serverStart\",\n    value: function serverStart() {\n      var self = this;\n      self.webserver.on('request', function _callee(req, res) {\n        var q, path, queryData, el, probeType, probe, action, execute;\n        return regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                res.writeHead(200, {\n                  'Content-Type': 'text/plain'\n                });\n                q = url.parse(req.url, true);\n\n                if (!(q.pathname === '/favicon.ico')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                res.writeHead(200, {\n                  'Content-Type': 'image/x-icon'\n                });\n                res.end();\n                return _context.abrupt(\"return\");\n\n              case 6:\n                path = q.pathname;\n                queryData = q.query;\n\n                if (queryData.environmentType === 'pot') {\n                  el = self.room.pots.filter(function (el) {\n                    return el.id === queryData.environmentID;\n                  });\n                  el = el[0];\n                } else {\n                  el = self.room;\n                }\n\n                if (queryData.probeType === 'probe') {\n                  probeType = 'probes';\n                } else {\n                  probeType = 'actuators';\n                }\n\n                probe = queryData.probe;\n                action = queryData.action;\n                _context.next = 14;\n                return regeneratorRuntime.awrap(el[probeType][probe][action]());\n\n              case 14:\n                execute = _context.sent;\n                res.write(JSON.stringify({\n                  environmentType: queryData.environmentType,\n                  el: el.id,\n                  probe: probe,\n                  action: action,\n                  result: execute\n                }));\n                res.end();\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"serverListen\",\n    value: function serverListen() {\n      this.webserver.listen(8080);\n      return;\n    }\n  }]);\n\n  return Main;\n}();\n\nvar app = new Main();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "http",
        "require",
        "https",
        "url",
        "Main",
        "webserver",
        "createServer",
        "remoteServer",
        "mainClock",
        "appSetup",
        "pot1",
        "Pot",
        "potID",
        "waterTemperatureProbeID",
        "waterLevelProbeTriggerPin",
        "waterLevelProbeEchoPin",
        "phProbeID",
        "ecProbeID",
        "waterLevelProbeID",
        "waterLoopID",
        "waterRefillID",
        "phBalancerID",
        "ecBalancerID",
        "pot2",
        "pots",
        "room",
        "Room",
        "roomID",
        "envoirementTemperatureProbeId",
        "lightSwitchID",
        "fanMotorID",
        "serverStart",
        "serverListen",
        "serverCallRemote",
        "mainLoop",
        "self",
        "setInterval",
        "forEach",
        "pot",
        "page",
        "action",
        "get",
        "resp",
        "data",
        "on",
        "chunk",
        "console",
        "log",
        "JSON",
        "parse",
        "err",
        "message",
        "req",
        "res",
        "writeHead",
        "q",
        "pathname",
        "end",
        "path",
        "queryData",
        "query",
        "environmentType",
        "el",
        "filter",
        "id",
        "environmentID",
        "probeType",
        "probe",
        "execute",
        "write",
        "stringify",
        "result",
        "listen",
        "app"
      ],
      "mappings": ";;AASA;;AACA;;;;;;;;;;AAVA;;;;AAKA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;IAKMG,I;;;AACJ,kBAAa;AAAA;;AACX,SAAKC,SAAL,GAAiBL,IAAI,CAACM,YAAL,EAAjB;AACA,SAAKC,YAAL,GAAoB,0DAApB;AAEA,SAAKC,SAAL,GAAiB,IAAI,IAArB,CAJW,CAIgB;;AAC3B,SAAKC,QAAL;AACD;;;;+BACS;AACR,WAAKC,IAAL,GAAY,IAAIC,eAAJ,CAAQ;AAClBC,QAAAA,KAAK,EAAE,MADW;AAElBC,QAAAA,uBAAuB,EAAE,iBAFP;AAGlBC,QAAAA,yBAAyB,EAAE,CAHT;AAIlBC,QAAAA,sBAAsB,EAAE,CAJN;AAKlBC,QAAAA,SAAS,EAAE,eALO;AAMlBC,QAAAA,SAAS,EAAE,eANO;AAOlBC,QAAAA,iBAAiB,EAAE,uBAPD;AAQlBC,QAAAA,WAAW,EAAE,iBARK;AASlBC,QAAAA,aAAa,EAAE,mBATG;AAUlBC,QAAAA,YAAY,EAAE,kBAVI;AAWlBC,QAAAA,YAAY,EAAE;AAXI,OAAR,CAAZ;AAaA,WAAKC,IAAL,GAAY,IAAIZ,eAAJ,CAAQ;AAClBC,QAAAA,KAAK,EAAE,MADW;AAElBC,QAAAA,uBAAuB,EAAE,iBAFP;AAGlBC,QAAAA,yBAAyB,EAAE,CAHT;AAIlBC,QAAAA,sBAAsB,EAAE,CAJN;AAKlBC,QAAAA,SAAS,EAAE,eALO;AAMlBC,QAAAA,SAAS,EAAE,eANO;AAOlBC,QAAAA,iBAAiB,EAAE,uBAPD;AAQlBC,QAAAA,WAAW,EAAE,iBARK;AASlBC,QAAAA,aAAa,EAAE,mBATG;AAUlBC,QAAAA,YAAY,EAAE,kBAVI;AAWlBC,QAAAA,YAAY,EAAE;AAXI,OAAR,CAAZ;AAaA,WAAKE,IAAL,GAAY,CAAC,KAAKd,IAAN,EAAY,KAAKa,IAAjB,CAAZ;AAEA,WAAKE,IAAL,GAAY,IAAIC,gBAAJ,CAAS;AACnBC,QAAAA,MAAM,EAAE,CADW;AAEnBd,QAAAA,uBAAuB,EAAE,IAFN;AAGnBe,QAAAA,6BAA6B,EAAE,IAHZ;AAInBC,QAAAA,aAAa,EAAE,IAJI;AAKnBC,QAAAA,UAAU,EAAE,IALO;AAMnBN,QAAAA,IAAI,EAAE,KAAKA;AANQ,OAAT,CAAZ;AASA,WAAKO,WAAL;AACA,WAAKC,YAAL;AACA,WAAKC,gBAAL,CAAsB,MAAtB,EAA8B,OAA9B;AACA,WAAKC,QAAL;AACD;;;+BACS;AACR,UAAMC,IAAI,GAAG,IAAb;AACAC,MAAAA,WAAW,CAAC,YAAU;AACnBD,QAAAA,IAAI,CAACV,IAAL,CAAUD,IAAV,CAAea,OAAf,CAAuB,UAACC,GAAD,EAAO,CACzB;AACA;AACA;AACH,SAJF;AAKF,OANU,EAMPH,IAAI,CAAC3B,SANE,CAAX;AAOD;AAED;;;;;;qCAIiB+B,I,EAAkB;AAAA,UAAZC,MAAY,uEAAL,IAAK;AACjC,UAAML,IAAI,GAAG,IAAb;AACAjC,MAAAA,KAAK,CAACuC,GAAN,CAAUN,IAAI,CAAC5B,YAAL,GAAkBgC,IAAlB,GAAyB,UAAzB,GAAsCC,MAAhD,EAAwD,UAACE,IAAD,EAAU;AAChE,YAAIC,IAAI,GAAG,EAAX;AACAD,QAAAA,IAAI,CAACE,EAAL,CAAQ,MAAR,EAAgB,UAACC,KAAD,EAAW;AACzBF,UAAAA,IAAI,IAAIE,KAAR;AACD,SAFD;AAGAH,QAAAA,IAAI,CAACE,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBE,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAZ;AACD,SAFD;AAGD,OARD,EAQGC,EARH,CAQM,OARN,EAQe,UAACM,GAAD,EAAS;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYG,GAAG,CAACC,OAA5B;AACD,OAVD;AAWD;;;kCACY;AACX,UAAMhB,IAAI,GAAG,IAAb;AACAA,MAAAA,IAAI,CAAC9B,SAAL,CAAeuC,EAAf,CAAkB,SAAlB,EAA6B,iBAAOQ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BA,gBAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAC,kCAAgB;AAAjB,iBAAnB;AACMC,gBAAAA,CAFqB,GAEjBpD,GAAG,CAAC8C,KAAJ,CAAUG,GAAG,CAACjD,GAAd,EAAmB,IAAnB,CAFiB;;AAAA,sBAGvBoD,CAAC,CAACC,QAAF,KAAe,cAHQ;AAAA;AAAA;AAAA;;AAIzBH,gBAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAC,kCAAgB;AAAjB,iBAAnB;AACAD,gBAAAA,GAAG,CAACI,GAAJ;AALyB;;AAAA;AAQrBC,gBAAAA,IARqB,GAQdH,CAAC,CAACC,QARY;AASrBG,gBAAAA,SATqB,GASTJ,CAAC,CAACK,KATO;;AAY3B,oBAAGD,SAAS,CAACE,eAAV,KAA4B,KAA/B,EAAqC;AACnCC,kBAAAA,EAAE,GAAG3B,IAAI,CAACV,IAAL,CAAUD,IAAV,CAAeuC,MAAf,CAAsB,UAAUD,EAAV,EAAc;AAAE,2BAAOA,EAAE,CAACE,EAAH,KAAUL,SAAS,CAACM,aAA3B;AAA2C,mBAAjF,CAAL;AACAH,kBAAAA,EAAE,GAAGA,EAAE,CAAC,CAAD,CAAP;AACD,iBAHD,MAGO;AACLA,kBAAAA,EAAE,GAAG3B,IAAI,CAACV,IAAV;AACD;;AAED,oBAAGkC,SAAS,CAACO,SAAV,KAAsB,OAAzB,EAAiC;AAAEA,kBAAAA,SAAS,GAAG,QAAZ;AAAuB,iBAA1D,MAAgE;AAAEA,kBAAAA,SAAS,GAAG,WAAZ;AAA0B;;AACxFC,gBAAAA,KApBuB,GAoBfR,SAAS,CAACQ,KApBK;AAqBvB3B,gBAAAA,MArBuB,GAqBdmB,SAAS,CAACnB,MArBI;AAAA;AAAA,gDAsBLsB,EAAE,CAACI,SAAD,CAAF,CAAcC,KAAd,EAAqB3B,MAArB,GAtBK;;AAAA;AAsBrB4B,gBAAAA,OAtBqB;AAuB3Bf,gBAAAA,GAAG,CAACgB,KAAJ,CAAUrB,IAAI,CAACsB,SAAL,CAAe;AAACT,kBAAAA,eAAe,EAAEF,SAAS,CAACE,eAA5B;AAA6CC,kBAAAA,EAAE,EAAEA,EAAE,CAACE,EAApD;AAAwDG,kBAAAA,KAAK,EAAEA,KAA/D;AAAsE3B,kBAAAA,MAAM,EAAEA,MAA9E;AAAsF+B,kBAAAA,MAAM,EAAEH;AAA9F,iBAAf,CAAV;AACAf,gBAAAA,GAAG,CAACI,GAAJ;;AAxB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA7B;AA0BD;;;mCACa;AACZ,WAAKpD,SAAL,CAAemE,MAAf,CAAsB,IAAtB;AACA;AACD;;;;;;AAGH,IAAMC,GAAG,GAAG,IAAIrE,IAAJ,EAAZ",
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover",
      "sourcesContent": [
        "/**\n * Grover/RedNeck System\n * Author: Voidbrain.net\n */\n\nconst http = require('http');\nconst https = require('https');\nconst url = require('url');\n\nimport Pot from './app/envoirement/pot/pot';\nimport Room from './app/envoirement/room/room';\n\nclass Main {\n  constructor(){\n    this.webserver = http.createServer();\n    this.remoteServer = 'https://www.voidbrain.net/grover/ajax/moduli/api/device/';\n\n    this.mainClock = 5 * 1000; // ms\n    this.appSetup();\n  }\n  appSetup(){\n    this.pot1 = new Pot({\n      potID: 'pot1',\n      waterTemperatureProbeID: '28-0114502296aa',\n      waterLevelProbeTriggerPin: 1,\n      waterLevelProbeEchoPin: 2,\n      phProbeID: 'pot1PhProbeID',\n      ecProbeID: 'pot1ECProbeID',\n      waterLevelProbeID: 'pot1WaterLevelProbeID',\n      waterLoopID: 'pot1WaterLoopID',\n      waterRefillID: 'pot1WaterRefillID',\n      phBalancerID: 'pot1PhBalancerID',\n      ecBalancerID: 'pot1EcBalancerID',\n    });\n    this.pot2 = new Pot({\n      potID: 'pot2',\n      waterTemperatureProbeID: '28-0114504ea1aa',\n      waterLevelProbeTriggerPin: 3,\n      waterLevelProbeEchoPin: 4,\n      phProbeID: 'pot2PhProbeID',\n      ecProbeID: 'pot2ECProbeID',\n      waterLevelProbeID: 'pot2WaterLevelProbeID',\n      waterLoopID: 'pot1WaterLoopID',\n      waterRefillID: 'pot2WaterRefillID',\n      phBalancerID: 'pot2PhBalancerID',\n      ecBalancerID: 'pot2EcBalancerID',\n    });\n    this.pots = [this.pot1, this.pot2];\n\n    this.room = new Room({\n      roomID: 1,\n      waterTemperatureProbeID: null,\n      envoirementTemperatureProbeId: null,\n      lightSwitchID: null,\n      fanMotorID: null,\n      pots: this.pots\n    });\n\n    this.serverStart();\n    this.serverListen();\n    this.serverCallRemote('ping', 'START');\n    this.mainLoop();\n  }\n  mainLoop(){\n    const self = this;\n    setInterval(function(){\n       self.room.pots.forEach((pot)=>{\n            // pot.waterTemperature.getTemperature().then(res=>{\n            //    console.log(\"Pot id: \" + pot.id, \" Value: \" + res);\n            // })\n        });\n    },  self.mainClock);\n  }\n\n  /**\n * HTTP Server\n */\n\n  serverCallRemote(page, action=null){\n    const self = this;\n    https.get(self.remoteServer+page + '?action=' + action, (resp) => {\n      let data = '';\n      resp.on('data', (chunk) => {\n        data += chunk;\n      });\n      resp.on('end', () => {\n        console.log(JSON.parse(data));\n      });\n    }).on(\"error\", (err) => {\n      console.log(\"Error: \" + err.message);\n    });\n  }\n  serverStart(){\n    const self = this;\n    self.webserver.on('request', async (req, res) => {\n      res.writeHead(200, {'Content-Type': 'text/plain'});\n      const q = url.parse(req.url, true);\n      if (q.pathname === '/favicon.ico') {\n        res.writeHead(200, {'Content-Type': 'image/x-icon'} );\n        res.end();\n        return;\n      }\n      const path = q.pathname;\n      const queryData = q.query;\n      let el;\n\n      if(queryData.environmentType==='pot'){\n        el = self.room.pots.filter(function (el) { return el.id === queryData.environmentID; });\n        el = el[0]\n      } else {\n        el = self.room;\n      }\n      let probeType;\n      if(queryData.probeType==='probe'){ probeType = 'probes'; } else { probeType = 'actuators'; }\n      let probe = queryData.probe;\n      let action = queryData.action;\n      const execute = await el[probeType][probe][action]();\n      res.write(JSON.stringify({environmentType: queryData.environmentType, el: el.id, probe: probe, action: action, result: execute}));\n      res.end();\n    });\n  }\n  serverListen(){\n    this.webserver.listen(8080);\n    return\n  }\n}\n\nconst app = new Main();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573686759758
  },
  "{\"sourceRoot\":\"/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/voidbrain/ionic/APPS/Grover\",\"filename\":\"/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot/pot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/voidbrain/ionic/APPS/Grover\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/voidbrain/ionic/APPS/Grover",
      "filename": "/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot/pot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/voidbrain/ionic/APPS/Grover",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot/pot.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot/pot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot",
        "sourceFileName": "pot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _temperature = _interopRequireDefault(require(\"../../probes/temperature/temperature\"));\n\nvar _waterRefill = _interopRequireDefault(require(\"../../actuators/water-refill/water-refill\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// import PhBalancer from '../../actuators/ph-balancer/ph-balancer';\n// import EcBalancer from '../../actuators/ec-balancer/ec-balancer';\nvar Pot = function Pot(_ref) {\n  var potID = _ref.potID,\n      waterTemperatureProbeID = _ref.waterTemperatureProbeID,\n      waterRefillID = _ref.waterRefillID;\n\n  _classCallCheck(this, Pot);\n\n  this.id = potID; //// this.waterTemperature = new Temperature(waterTemperatureProbeID);\n  // this.phProbe = new PhProbe(phProbeID);\n  // this.ecProbe = new EcProbe(ecProbeID);\n  // this.waterLevel = new WaterLevel(waterLevelProbeID, waterLevelProbeTriggerPin, waterLevelProbeEchoPin);\n  // this.waterLoop = new WaterLoop(waterLoopID);\n  //// this.waterRefill = new WaterRefill(waterRefillID);\n  // this.phBalancer = new PhBalancer(phBalancerID);\n  // this.ecBalancer = new EcBalancer(ecBalancerID);\n\n  this.probes = {\n    waterTemperature: new _temperature[\"default\"](waterTemperatureProbeID)\n  };\n  this.actuators = {\n    waterRefill: new _waterRefill[\"default\"](waterRefillID)\n  };\n};\n\nvar _default = Pot;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvdC5qcyJdLCJuYW1lcyI6WyJQb3QiLCJwb3RJRCIsIndhdGVyVGVtcGVyYXR1cmVQcm9iZUlEIiwid2F0ZXJSZWZpbGxJRCIsImlkIiwicHJvYmVzIiwid2F0ZXJUZW1wZXJhdHVyZSIsIlRlbXBlcmF0dXJlIiwiYWN0dWF0b3JzIiwid2F0ZXJSZWZpbGwiLCJXYXRlclJlZmlsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUtBOzs7Ozs7QUFDQTtBQUNBO0lBRU1BLEcsR0FDSixtQkFDb0U7QUFBQSxNQUR2REMsS0FDdUQsUUFEdkRBLEtBQ3VEO0FBQUEsTUFEaERDLHVCQUNnRCxRQURoREEsdUJBQ2dEO0FBQUEsTUFBbkRDLGFBQW1ELFFBQW5EQSxhQUFtRDs7QUFBQTs7QUFDbEUsT0FBS0MsRUFBTCxHQUFVSCxLQUFWLENBRGtFLENBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsT0FBS0ksTUFBTCxHQUFjO0FBQ1ZDLElBQUFBLGdCQUFnQixFQUFFLElBQUlDLHVCQUFKLENBQWdCTCx1QkFBaEI7QUFEUixHQUFkO0FBR0EsT0FBS00sU0FBTCxHQUFpQjtBQUNiQyxJQUFBQSxXQUFXLEVBQUcsSUFBSUMsdUJBQUosQ0FBZ0JQLGFBQWhCO0FBREQsR0FBakI7QUFHRCxDOztlQUVZSCxHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92b2lkYnJhaW4vaW9uaWMvQVBQUy9Hcm92ZXIvYXBwL2Vudm9pcmVtZW50L3BvdCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG90IEVudm9pcmVtZW50XG4gKi9cblxuaW1wb3J0IFRlbXBlcmF0dXJlIGZyb20gJy4uLy4uL3Byb2Jlcy90ZW1wZXJhdHVyZS90ZW1wZXJhdHVyZSc7XG4vLyBpbXBvcnQgUGhQcm9iZSBmcm9tICcuLi8uLi9wcm9iZXMvcGgvcGgnO1xuLy8gaW1wb3J0IEVjUHJvYmUgZnJvbSAnLi4vLi4vcHJvYmVzL2VjL2VjJztcbi8vIGltcG9ydCBXYXRlckxldmVsIGZyb20gJy4uLy4uL3Byb2Jlcy93YXRlci1sZXZlbC93YXRlci1sZXZlbCc7XG4vLyBpbXBvcnQgV2F0ZXJMb29wIGZyb20gJy4uLy4uL2FjdHVhdG9ycy93YXRlci1sb29wL3dhdGVyLWxvb3AnO1xuaW1wb3J0IFdhdGVyUmVmaWxsIGZyb20gJy4uLy4uL2FjdHVhdG9ycy93YXRlci1yZWZpbGwvd2F0ZXItcmVmaWxsJztcbi8vIGltcG9ydCBQaEJhbGFuY2VyIGZyb20gJy4uLy4uL2FjdHVhdG9ycy9waC1iYWxhbmNlci9waC1iYWxhbmNlcic7XG4vLyBpbXBvcnQgRWNCYWxhbmNlciBmcm9tICcuLi8uLi9hY3R1YXRvcnMvZWMtYmFsYW5jZXIvZWMtYmFsYW5jZXInO1xuXG5jbGFzcyBQb3Qge1xuICBjb25zdHJ1Y3Rvcih7cG90SUQsIHdhdGVyVGVtcGVyYXR1cmVQcm9iZUlELCAvKiB3YXRlckxldmVsUHJvYmVUcmlnZ2VyUGluLCB3YXRlckxldmVsUHJvYmVFY2hvUGluLCBwaFByb2JlSUQsIGVjUHJvYmVJRCwgd2F0ZXJMZXZlbFByb2JlSUQsXG4gICAgd2F0ZXJMb29wSUQsKi8gd2F0ZXJSZWZpbGxJRCAvKiwgcGhCYWxhbmNlcklELCBlY0JhbGFuY2VySUQgKi8gfSkge1xuICAgIHRoaXMuaWQgPSBwb3RJRDtcbiAgICAvLy8vIHRoaXMud2F0ZXJUZW1wZXJhdHVyZSA9IG5ldyBUZW1wZXJhdHVyZSh3YXRlclRlbXBlcmF0dXJlUHJvYmVJRCk7XG4gICAgLy8gdGhpcy5waFByb2JlID0gbmV3IFBoUHJvYmUocGhQcm9iZUlEKTtcbiAgICAvLyB0aGlzLmVjUHJvYmUgPSBuZXcgRWNQcm9iZShlY1Byb2JlSUQpO1xuICAgIC8vIHRoaXMud2F0ZXJMZXZlbCA9IG5ldyBXYXRlckxldmVsKHdhdGVyTGV2ZWxQcm9iZUlELCB3YXRlckxldmVsUHJvYmVUcmlnZ2VyUGluLCB3YXRlckxldmVsUHJvYmVFY2hvUGluKTtcbiAgICAvLyB0aGlzLndhdGVyTG9vcCA9IG5ldyBXYXRlckxvb3Aod2F0ZXJMb29wSUQpO1xuICAgIC8vLy8gdGhpcy53YXRlclJlZmlsbCA9IG5ldyBXYXRlclJlZmlsbCh3YXRlclJlZmlsbElEKTtcbiAgICAvLyB0aGlzLnBoQmFsYW5jZXIgPSBuZXcgUGhCYWxhbmNlcihwaEJhbGFuY2VySUQpO1xuICAgIC8vIHRoaXMuZWNCYWxhbmNlciA9IG5ldyBFY0JhbGFuY2VyKGVjQmFsYW5jZXJJRCk7XG4gICAgdGhpcy5wcm9iZXMgPSB7XG4gICAgICAgIHdhdGVyVGVtcGVyYXR1cmU6IG5ldyBUZW1wZXJhdHVyZSh3YXRlclRlbXBlcmF0dXJlUHJvYmVJRCksXG4gICAgfTtcbiAgICB0aGlzLmFjdHVhdG9ycyA9IHtcbiAgICAgICAgd2F0ZXJSZWZpbGwgOiBuZXcgV2F0ZXJSZWZpbGwod2F0ZXJSZWZpbGxJRCksXG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgUG90O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "pot.js"
      ],
      "names": [
        "Pot",
        "potID",
        "waterTemperatureProbeID",
        "waterRefillID",
        "id",
        "probes",
        "waterTemperature",
        "Temperature",
        "actuators",
        "waterRefill",
        "WaterRefill"
      ],
      "mappings": ";;;;;;;AAIA;;AAKA;;;;;;AACA;AACA;IAEMA,G,GACJ,mBACoE;AAAA,MADvDC,KACuD,QADvDA,KACuD;AAAA,MADhDC,uBACgD,QADhDA,uBACgD;AAAA,MAAnDC,aAAmD,QAAnDA,aAAmD;;AAAA;;AAClE,OAAKC,EAAL,GAAUH,KAAV,CADkE,CAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAKI,MAAL,GAAc;AACVC,IAAAA,gBAAgB,EAAE,IAAIC,uBAAJ,CAAgBL,uBAAhB;AADR,GAAd;AAGA,OAAKM,SAAL,GAAiB;AACbC,IAAAA,WAAW,EAAG,IAAIC,uBAAJ,CAAgBP,aAAhB;AADD,GAAjB;AAGD,C;;eAEYH,G",
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/envoirement/pot",
      "sourcesContent": [
        "/**\n * Pot Envoirement\n */\n\nimport Temperature from '../../probes/temperature/temperature';\n// import PhProbe from '../../probes/ph/ph';\n// import EcProbe from '../../probes/ec/ec';\n// import WaterLevel from '../../probes/water-level/water-level';\n// import WaterLoop from '../../actuators/water-loop/water-loop';\nimport WaterRefill from '../../actuators/water-refill/water-refill';\n// import PhBalancer from '../../actuators/ph-balancer/ph-balancer';\n// import EcBalancer from '../../actuators/ec-balancer/ec-balancer';\n\nclass Pot {\n  constructor({potID, waterTemperatureProbeID, /* waterLevelProbeTriggerPin, waterLevelProbeEchoPin, phProbeID, ecProbeID, waterLevelProbeID,\n    waterLoopID,*/ waterRefillID /*, phBalancerID, ecBalancerID */ }) {\n    this.id = potID;\n    //// this.waterTemperature = new Temperature(waterTemperatureProbeID);\n    // this.phProbe = new PhProbe(phProbeID);\n    // this.ecProbe = new EcProbe(ecProbeID);\n    // this.waterLevel = new WaterLevel(waterLevelProbeID, waterLevelProbeTriggerPin, waterLevelProbeEchoPin);\n    // this.waterLoop = new WaterLoop(waterLoopID);\n    //// this.waterRefill = new WaterRefill(waterRefillID);\n    // this.phBalancer = new PhBalancer(phBalancerID);\n    // this.ecBalancer = new EcBalancer(ecBalancerID);\n    this.probes = {\n        waterTemperature: new Temperature(waterTemperatureProbeID),\n    };\n    this.actuators = {\n        waterRefill : new WaterRefill(waterRefillID),\n    };\n  }\n}\nexport default Pot;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573685458506
  },
  "{\"sourceRoot\":\"/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/voidbrain/ionic/APPS/Grover\",\"filename\":\"/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature/temperature.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/voidbrain/ionic/APPS/Grover\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/voidbrain/ionic/APPS/Grover",
      "filename": "/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature/temperature.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/voidbrain/ionic/APPS/Grover",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature/temperature.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature/temperature.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature",
        "sourceFileName": "temperature.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Temperature DS18B20 Sensors\n */\nvar sensor = require('ds18x20');\n\nvar Temperature =\n/*#__PURE__*/\nfunction () {\n  function Temperature(id) {\n    _classCallCheck(this, Temperature);\n\n    this.id = id;\n  }\n\n  _createClass(Temperature, [{\n    key: \"read\",\n    value: function read() {\n      var self;\n      return regeneratorRuntime.async(function read$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              self = this;\n              return _context.abrupt(\"return\", new Promise(function (resolve) {\n                sensor.get(self.id, function (err, tempObj) {\n                  if (err) {\n                    throw err;\n                  }\n\n                  resolve(tempObj);\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return Temperature;\n}();\n\nvar _default = Temperature;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBlcmF0dXJlLmpzIl0sIm5hbWVzIjpbInNlbnNvciIsInJlcXVpcmUiLCJUZW1wZXJhdHVyZSIsImlkIiwic2VsZiIsIlByb21pc2UiLCJyZXNvbHZlIiwiZ2V0IiwiZXJyIiwidGVtcE9iaiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOzs7QUFJQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXRCOztJQUVNQyxXOzs7QUFDSix1QkFBWUMsRUFBWixFQUFnQjtBQUFBOztBQUNoQixTQUFLQSxFQUFMLEdBQVVBLEVBQVY7QUFDQzs7Ozs7Ozs7OztBQUVPQyxjQUFBQSxJLEdBQU8sSTsrQ0FDTixJQUFJQyxPQUFKLENBQVksVUFBQUMsT0FBTyxFQUFJO0FBQzVCTixnQkFBQUEsTUFBTSxDQUFDTyxHQUFQLENBQVdILElBQUksQ0FBQ0QsRUFBaEIsRUFBb0IsVUFBVUssR0FBVixFQUFlQyxPQUFmLEVBQXdCO0FBQzFDLHNCQUFJRCxHQUFKLEVBQVM7QUFBRSwwQkFBTUEsR0FBTjtBQUFZOztBQUN2QkYsa0JBQUFBLE9BQU8sQ0FBQ0csT0FBRCxDQUFQO0FBQ0QsaUJBSEQ7QUFJRCxlQUxNLEM7Ozs7Ozs7Ozs7Ozs7O2VBUUlQLFciLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZvaWRicmFpbi9pb25pYy9BUFBTL0dyb3Zlci9hcHAvcHJvYmVzL3RlbXBlcmF0dXJlIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUZW1wZXJhdHVyZSBEUzE4QjIwIFNlbnNvcnNcbiAqL1xuXG5jb25zdCBzZW5zb3IgPSByZXF1aXJlKCdkczE4eDIwJyk7XG5cbmNsYXNzIFRlbXBlcmF0dXJlIHtcbiAgY29uc3RydWN0b3IoaWQpIHtcbiAgdGhpcy5pZCA9IGlkO1xuICB9XG4gIGFzeW5jIHJlYWQoKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgc2Vuc29yLmdldChzZWxmLmlkLCBmdW5jdGlvbiAoZXJyLCB0ZW1wT2JqKSB7XG4gICAgICAgIGlmIChlcnIpIHsgdGhyb3cgZXJyOyB9XG4gICAgICAgIHJlc29sdmUodGVtcE9iaik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVGVtcGVyYXR1cmU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "temperature.js"
      ],
      "names": [
        "sensor",
        "require",
        "Temperature",
        "id",
        "self",
        "Promise",
        "resolve",
        "get",
        "err",
        "tempObj"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;;AAIA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IAEMC,W;;;AACJ,uBAAYC,EAAZ,EAAgB;AAAA;;AAChB,SAAKA,EAAL,GAAUA,EAAV;AACC;;;;;;;;;;AAEOC,cAAAA,I,GAAO,I;+CACN,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BN,gBAAAA,MAAM,CAACO,GAAP,CAAWH,IAAI,CAACD,EAAhB,EAAoB,UAAUK,GAAV,EAAeC,OAAf,EAAwB;AAC1C,sBAAID,GAAJ,EAAS;AAAE,0BAAMA,GAAN;AAAY;;AACvBF,kBAAAA,OAAO,CAACG,OAAD,CAAP;AACD,iBAHD;AAID,eALM,C;;;;;;;;;;;;;;eAQIP,W",
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/probes/temperature",
      "sourcesContent": [
        "/**\n * Temperature DS18B20 Sensors\n */\n\nconst sensor = require('ds18x20');\n\nclass Temperature {\n  constructor(id) {\n  this.id = id;\n  }\n  async read() {\n    const self = this;\n    return new Promise(resolve => {\n      sensor.get(self.id, function (err, tempObj) {\n        if (err) { throw err; }\n        resolve(tempObj);\n      });\n    });\n  }\n}\nexport default Temperature;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573685458475
  },
  "{\"sourceRoot\":\"/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/voidbrain/ionic/APPS/Grover\",\"filename\":\"/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill/water-refill.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/voidbrain/ionic/APPS/Grover\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/voidbrain/ionic/APPS/Grover",
      "filename": "/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill/water-refill.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/voidbrain/ionic/APPS/Grover",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill/water-refill.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill/water-refill.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill",
        "sourceFileName": "water-refill.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Water Refill Actuator\n */\nvar l298nModule = require('motor-l298n');\n\nvar speed = 100; // Percentage\n\nvar in1Pin = 17;\nvar in2Pin = 27;\nvar enable1Pin = 12;\nvar in3Pin = 5;\nvar in4Pin = 6;\nvar enable2Pin = 13;\n\nvar WaterRefill =\n/*#__PURE__*/\nfunction () {\n  function WaterRefill(id) {\n    _classCallCheck(this, WaterRefill);\n\n    this.id = id;\n    this.l298n = l298nModule.setup(in1Pin, in2Pin, enable1Pin, in3Pin, in4Pin, enable2Pin);\n  }\n\n  _createClass(WaterRefill, [{\n    key: \"run\",\n    value: function run() {\n      var self;\n      return regeneratorRuntime.async(function run$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              self = this;\n              return _context.abrupt(\"return\", new Promise(function (resolve) {\n                self.l298n.forward(l298nModule.LEFT);\n                self.l298n.forward(l298nModule.RIGHT);\n                self.l298n.setSpeed(l298nModule.LEFT, speed);\n                self.l298n.setSpeed(l298nModule.RIGHT, speed); // console.log(\"Moving forward!!\");\n\n                setTimeout(function () {\n                  self.l298n.stop(l298nModule.LEFT);\n                  self.l298n.stop(l298nModule.RIGHT); // console.log(\"All done!\");\n                }, 180 * 1000);\n                resolve;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return WaterRefill;\n}();\n\nvar _default = WaterRefill;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGVyLXJlZmlsbC5qcyJdLCJuYW1lcyI6WyJsMjk4bk1vZHVsZSIsInJlcXVpcmUiLCJzcGVlZCIsImluMVBpbiIsImluMlBpbiIsImVuYWJsZTFQaW4iLCJpbjNQaW4iLCJpbjRQaW4iLCJlbmFibGUyUGluIiwiV2F0ZXJSZWZpbGwiLCJpZCIsImwyOThuIiwic2V0dXAiLCJzZWxmIiwiUHJvbWlzZSIsInJlc29sdmUiLCJmb3J3YXJkIiwiTEVGVCIsIlJJR0hUIiwic2V0U3BlZWQiLCJzZXRUaW1lb3V0Iiwic3RvcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOzs7QUFLQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUVBLElBQUlDLEtBQUssR0FBUSxHQUFqQixDLENBQXNCOztBQUN0QixJQUFJQyxNQUFNLEdBQU8sRUFBakI7QUFDQSxJQUFJQyxNQUFNLEdBQU8sRUFBakI7QUFDQSxJQUFJQyxVQUFVLEdBQUcsRUFBakI7QUFDQSxJQUFJQyxNQUFNLEdBQU8sQ0FBakI7QUFDQSxJQUFJQyxNQUFNLEdBQU8sQ0FBakI7QUFDQSxJQUFJQyxVQUFVLEdBQUcsRUFBakI7O0lBRU1DLFc7OztBQUNKLHVCQUFZQyxFQUFaLEVBQWdCO0FBQUE7O0FBQ2QsU0FBS0EsRUFBTCxHQUFVQSxFQUFWO0FBQ0MsU0FBS0MsS0FBTCxHQUFhWCxXQUFXLENBQUNZLEtBQVosQ0FBa0JULE1BQWxCLEVBQTBCQyxNQUExQixFQUFrQ0MsVUFBbEMsRUFBOENDLE1BQTlDLEVBQXNEQyxNQUF0RCxFQUE4REMsVUFBOUQsQ0FBYjtBQUNGOzs7Ozs7Ozs7O0FBRU9LLGNBQUFBLEksR0FBTyxJOytDQUNOLElBQUlDLE9BQUosQ0FBWSxVQUFBQyxPQUFPLEVBQUk7QUFFNUJGLGdCQUFBQSxJQUFJLENBQUNGLEtBQUwsQ0FBV0ssT0FBWCxDQUFtQmhCLFdBQVcsQ0FBQ2lCLElBQS9CO0FBQ0FKLGdCQUFBQSxJQUFJLENBQUNGLEtBQUwsQ0FBV0ssT0FBWCxDQUFtQmhCLFdBQVcsQ0FBQ2tCLEtBQS9CO0FBQ0FMLGdCQUFBQSxJQUFJLENBQUNGLEtBQUwsQ0FBV1EsUUFBWCxDQUFvQm5CLFdBQVcsQ0FBQ2lCLElBQWhDLEVBQXFDZixLQUFyQztBQUNBVyxnQkFBQUEsSUFBSSxDQUFDRixLQUFMLENBQVdRLFFBQVgsQ0FBb0JuQixXQUFXLENBQUNrQixLQUFoQyxFQUFzQ2hCLEtBQXRDLEVBTDRCLENBTTVCOztBQUVBa0IsZ0JBQUFBLFVBQVUsQ0FBQyxZQUFXO0FBQ3BCUCxrQkFBQUEsSUFBSSxDQUFDRixLQUFMLENBQVdVLElBQVgsQ0FBZ0JyQixXQUFXLENBQUNpQixJQUE1QjtBQUNBSixrQkFBQUEsSUFBSSxDQUFDRixLQUFMLENBQVdVLElBQVgsQ0FBZ0JyQixXQUFXLENBQUNrQixLQUE1QixFQUZvQixDQUdwQjtBQUNELGlCQUpTLEVBSVAsTUFBSSxJQUpHLENBQVY7QUFNQUgsZ0JBQUFBLE9BQU87QUFDUixlQWZNLEM7Ozs7Ozs7Ozs7Ozs7O2VBa0JJTixXIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92b2lkYnJhaW4vaW9uaWMvQVBQUy9Hcm92ZXIvYXBwL2FjdHVhdG9ycy93YXRlci1yZWZpbGwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdhdGVyIFJlZmlsbCBBY3R1YXRvclxuICovXG5cblxudmFyIGwyOThuTW9kdWxlID0gcmVxdWlyZSgnbW90b3ItbDI5OG4nKTtcblxudmFyIHNwZWVkICAgICAgPSAxMDA7IC8vIFBlcmNlbnRhZ2VcbnZhciBpbjFQaW4gICAgID0gMTc7XG52YXIgaW4yUGluICAgICA9IDI3O1xudmFyIGVuYWJsZTFQaW4gPSAxMjtcbnZhciBpbjNQaW4gICAgID0gNTtcbnZhciBpbjRQaW4gICAgID0gNjtcbnZhciBlbmFibGUyUGluID0gMTM7XG5cbmNsYXNzIFdhdGVyUmVmaWxsIHtcbiAgY29uc3RydWN0b3IoaWQpIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgIHRoaXMubDI5OG4gPSBsMjk4bk1vZHVsZS5zZXR1cChpbjFQaW4sIGluMlBpbiwgZW5hYmxlMVBpbiwgaW4zUGluLCBpbjRQaW4sIGVuYWJsZTJQaW4pO1xuICB9XG4gIGFzeW5jIHJ1bigpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG5cbiAgICAgIHNlbGYubDI5OG4uZm9yd2FyZChsMjk4bk1vZHVsZS5MRUZUKTtcbiAgICAgIHNlbGYubDI5OG4uZm9yd2FyZChsMjk4bk1vZHVsZS5SSUdIVCk7XG4gICAgICBzZWxmLmwyOThuLnNldFNwZWVkKGwyOThuTW9kdWxlLkxFRlQsc3BlZWQpO1xuICAgICAgc2VsZi5sMjk4bi5zZXRTcGVlZChsMjk4bk1vZHVsZS5SSUdIVCxzcGVlZCk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIk1vdmluZyBmb3J3YXJkISFcIik7XG5cbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIHNlbGYubDI5OG4uc3RvcChsMjk4bk1vZHVsZS5MRUZUKTtcbiAgICAgICAgc2VsZi5sMjk4bi5zdG9wKGwyOThuTW9kdWxlLlJJR0hUKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJBbGwgZG9uZSFcIik7XG4gICAgICB9LCAxODAqMTAwMCk7XG5cbiAgICAgIHJlc29sdmU7XG4gICAgfSk7XG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IFdhdGVyUmVmaWxsO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "water-refill.js"
      ],
      "names": [
        "l298nModule",
        "require",
        "speed",
        "in1Pin",
        "in2Pin",
        "enable1Pin",
        "in3Pin",
        "in4Pin",
        "enable2Pin",
        "WaterRefill",
        "id",
        "l298n",
        "setup",
        "self",
        "Promise",
        "resolve",
        "forward",
        "LEFT",
        "RIGHT",
        "setSpeed",
        "setTimeout",
        "stop"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;;AAKA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIC,KAAK,GAAQ,GAAjB,C,CAAsB;;AACtB,IAAIC,MAAM,GAAO,EAAjB;AACA,IAAIC,MAAM,GAAO,EAAjB;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,MAAM,GAAO,CAAjB;AACA,IAAIC,MAAM,GAAO,CAAjB;AACA,IAAIC,UAAU,GAAG,EAAjB;;IAEMC,W;;;AACJ,uBAAYC,EAAZ,EAAgB;AAAA;;AACd,SAAKA,EAAL,GAAUA,EAAV;AACC,SAAKC,KAAL,GAAaX,WAAW,CAACY,KAAZ,CAAkBT,MAAlB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,MAA9C,EAAsDC,MAAtD,EAA8DC,UAA9D,CAAb;AACF;;;;;;;;;;AAEOK,cAAAA,I,GAAO,I;+CACN,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAE5BF,gBAAAA,IAAI,CAACF,KAAL,CAAWK,OAAX,CAAmBhB,WAAW,CAACiB,IAA/B;AACAJ,gBAAAA,IAAI,CAACF,KAAL,CAAWK,OAAX,CAAmBhB,WAAW,CAACkB,KAA/B;AACAL,gBAAAA,IAAI,CAACF,KAAL,CAAWQ,QAAX,CAAoBnB,WAAW,CAACiB,IAAhC,EAAqCf,KAArC;AACAW,gBAAAA,IAAI,CAACF,KAAL,CAAWQ,QAAX,CAAoBnB,WAAW,CAACkB,KAAhC,EAAsChB,KAAtC,EAL4B,CAM5B;;AAEAkB,gBAAAA,UAAU,CAAC,YAAW;AACpBP,kBAAAA,IAAI,CAACF,KAAL,CAAWU,IAAX,CAAgBrB,WAAW,CAACiB,IAA5B;AACAJ,kBAAAA,IAAI,CAACF,KAAL,CAAWU,IAAX,CAAgBrB,WAAW,CAACkB,KAA5B,EAFoB,CAGpB;AACD,iBAJS,EAIP,MAAI,IAJG,CAAV;AAMAH,gBAAAA,OAAO;AACR,eAfM,C;;;;;;;;;;;;;;eAkBIN,W",
      "sourceRoot": "/Users/voidbrain/ionic/APPS/Grover/app/actuators/water-refill",
      "sourcesContent": [
        "/**\n * Water Refill Actuator\n */\n\n\nvar l298nModule = require('motor-l298n');\n\nvar speed      = 100; // Percentage\nvar in1Pin     = 17;\nvar in2Pin     = 27;\nvar enable1Pin = 12;\nvar in3Pin     = 5;\nvar in4Pin     = 6;\nvar enable2Pin = 13;\n\nclass WaterRefill {\n  constructor(id) {\n    this.id = id;\n     this.l298n = l298nModule.setup(in1Pin, in2Pin, enable1Pin, in3Pin, in4Pin, enable2Pin);\n  }\n  async run() {\n    const self = this;\n    return new Promise(resolve => {\n\n      self.l298n.forward(l298nModule.LEFT);\n      self.l298n.forward(l298nModule.RIGHT);\n      self.l298n.setSpeed(l298nModule.LEFT,speed);\n      self.l298n.setSpeed(l298nModule.RIGHT,speed);\n      // console.log(\"Moving forward!!\");\n\n      setTimeout(function() {\n        self.l298n.stop(l298nModule.LEFT);\n        self.l298n.stop(l298nModule.RIGHT);\n        // console.log(\"All done!\");\n      }, 180*1000);\n\n      resolve;\n    });\n  }\n}\nexport default WaterRefill;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573685458502
  }
}