{
  "main": "./index.ts",
  "compilerOptions": {
    "moduleResolution": "node",
    "module": "ESNEXT",
    "esModuleInterop": true,
    "target": "es6",
    "sourceMap": true,
    "outDir": "dist",
    "rootDir": "./",
    "typeRoots": ["src/@types", "node_modules/@types"],
    /* Type Checking */
    // "strict": true,                                      /* Enable all strict type-checking options. */
    // // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    "strictNullChecks": false,                         /* When type checking, take into account `null` and `undefined`. */
    "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
    "strictPropertyInitialization": false,             /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": false,                           /* Enable error reporting when `this` is given the type `any`. */
    "useUnknownInCatchVariables": true,               /* Type catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": false,                           /* Enable error reporting when a local variables aren't read. */
    "noUnusedParameters": false,                       /* Raise an error when a function parameter isn't read */
    "exactOptionalPropertyTypes": false,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": false,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,                 /* Include 'undefined' in index signature results */
    "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
    "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false, 
  },
  "lib": ["es2015"]
}
